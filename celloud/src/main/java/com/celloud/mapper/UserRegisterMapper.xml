<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.celloud.mapper.UserRegisterMapper" >
  <resultMap id="BaseResultMap" type="com.celloud.model.mysql.UserRegister" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="user_id" property="userId" jdbcType="INTEGER" />
    <result column="expire_date" property="expireDate" jdbcType="TIMESTAMP" />
    <result column="md5" property="md5" jdbcType="VARCHAR" />
    <result column="email" property="email" jdbcType="VARCHAR" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.celloud.model.mysql.UserRegister" extends="BaseResultMap" >
    <result column="app_ids" property="appIds" jdbcType="LONGVARCHAR" />
    <result column="role_ids" property="roleIds" jdbcType="LONGVARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, user_id, expire_date, md5, email
  </sql>
  <sql id="Blob_Column_List" >
    app_ids, role_ids
  </sql>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from tb_user_register
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from tb_user_register
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.celloud.model.mysql.UserRegister" >
    insert into tb_user_register (id, user_id, expire_date, 
      md5, email, app_ids, role_ids
      )
    values (#{id,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, #{expireDate,jdbcType=TIMESTAMP}, 
      #{md5,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR}, #{appIds,jdbcType=LONGVARCHAR}, #{roleIds, jdbcType=LONGVARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.celloud.model.mysql.UserRegister" >
    insert into tb_user_register
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
      <if test="expireDate != null" >
        expire_date,
      </if>
      <if test="md5 != null" >
        md5,
      </if>
      <if test="email != null" >
        email,
      </if>
      <if test="appIds != null" >
        app_ids,
      </if>
      <if test="roleIds != null" >
        role_ids,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="expireDate != null" >
        #{expireDate,jdbcType=TIMESTAMP},
      </if>
      <if test="md5 != null" >
        #{md5,jdbcType=VARCHAR},
      </if>
      <if test="email != null" >
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="appIds != null" >
        #{appIds,jdbcType=LONGVARCHAR},
      </if>
      <if test="roleIds != null" >
        #{roleIds,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.celloud.model.mysql.UserRegister" >
    update tb_user_register
    <set >
      <if test="userId != null" >
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="expireDate != null" >
        expire_date = #{expireDate,jdbcType=TIMESTAMP},
      </if>
      <if test="md5 != null" >
        md5 = #{md5,jdbcType=VARCHAR},
      </if>
      <if test="email != null" >
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="appIds != null" >
        app_ids = #{appIds,jdbcType=LONGVARCHAR},
      </if>
      <if test="roleIds != null" >
        role_ids = #{roleIds,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.celloud.model.mysql.UserRegister" >
    update tb_user_register
    set user_id = #{userId,jdbcType=INTEGER},
      expire_date = #{expireDate,jdbcType=TIMESTAMP},
      md5 = #{md5,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      app_ids = #{appIds,jdbcType=LONGVARCHAR},
      role_ids = #{roleIds,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.celloud.model.mysql.UserRegister" >
    update tb_user_register
    set user_id = #{userId,jdbcType=INTEGER},
      expire_date = #{expireDate,jdbcType=TIMESTAMP},
      md5 = #{md5,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <insert id="insertUserRegisterInfo">
        insert into tb_user_register (email, expire_date,
        md5,app_ids, role_ids,auth_from)
        values (#{email,jdbcType=VARCHAR},
        DATE_ADD(now(),INTERVAL 1 DAY),
        #{randomCode,jdbcType=VARCHAR},
        #{appIds,jdbcType=VARCHAR},
        #{roleIds,jdbcType=VARCHAR},
        #{authFrom,jdbcType=VARCHAR})
    </insert>
    
    <select id="getValidate" resultType="java.lang.Integer">
        select count(id) from tb_user_register where email=#{email } and md5=#{md5 } and expire_date>now()
    </select>
    
    <delete id="deleteUserRegisterInfo">
        delete from tb_user_register where email=#{email }
    </delete>
    
    <select id="getUserRegisterInfo" resultMap="ResultMapWithBLOBs">
        select * from tb_user_register where email=#{email } and md5=#{md5 }
    </select>
</mapper>