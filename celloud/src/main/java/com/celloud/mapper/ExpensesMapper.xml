<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.celloud.mapper.ExpensesMapper" >
  <resultMap id="BaseResultMap" type="com.celloud.model.mysql.Expenses" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="user_id" property="userId" jdbcType="INTEGER" />
    <result column="item_id" property="itemId" jdbcType="INTEGER" />
    <result column="item_type" property="itemType" jdbcType="TINYINT" />
    <result column="price" property="price" jdbcType="DECIMAL" />
    <result column="create_date" property="createDate" jdbcType="TIMESTAMP" />
    <result column="remark" property="remark" jdbcType="VARCHAR" />
  </resultMap>
  <resultMap id="extraResultMap" type="com.celloud.model.mysql.Expenses" extends="BaseResultMap" >
    <result column="app_Name" property="appName" jdbcType="VARCHAR" />
    <result column="file_infos" property="fileInfos" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, user_id, item_id, item_type, price, create_date, remark
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from tb_expenses
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from tb_expenses
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.celloud.model.mysql.Expenses" >
    insert into tb_expenses (user_id, item_id, 
      item_type, price, create_date, 
      remark)
    values (#{userId,jdbcType=INTEGER}, #{itemId,jdbcType=INTEGER}, 
      #{itemType,jdbcType=TINYINT}, #{price,jdbcType=DECIMAL}, #{createDate,jdbcType=TIMESTAMP}, 
      #{remark,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.celloud.model.mysql.Expenses" useGeneratedKeys="true" keyProperty="id" >
    insert into tb_expenses
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
      <if test="itemId != null" >
        item_id,
      </if>
      <if test="itemType != null" >
        item_type,
      </if>
      <if test="price != null" >
        price,
      </if>
      <if test="createDate != null" >
        create_date,
      </if>
      <if test="remark != null" >
        remark,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="itemId != null" >
        #{itemId,jdbcType=INTEGER},
      </if>
      <if test="itemType != null" >
        #{itemType,jdbcType=TINYINT},
      </if>
      <if test="price != null" >
        #{price,jdbcType=DECIMAL},
      </if>
      <if test="createDate != null" >
        #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="remark != null" >
        #{remark,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.celloud.model.mysql.Expenses" >
    update tb_expenses
    <set >
      <if test="userId != null" >
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="itemId != null" >
        item_id = #{itemId,jdbcType=INTEGER},
      </if>
      <if test="itemType != null" >
        item_type = #{itemType,jdbcType=TINYINT},
      </if>
      <if test="price != null" >
        price = #{price,jdbcType=DECIMAL},
      </if>
      <if test="createDate != null" >
        create_date = #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="remark != null" >
        remark = #{remark,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.celloud.model.mysql.Expenses" >
    update tb_expenses
    set user_id = #{userId,jdbcType=INTEGER},
      item_id = #{itemId,jdbcType=INTEGER},
      item_type = #{itemType,jdbcType=TINYINT},
      price = #{price,jdbcType=DECIMAL},
      create_date = #{createDate,jdbcType=TIMESTAMP},
      remark = #{remark,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <insert id="addFileExpenseRelat">
    insert into tb_file_expenses_relat (expenses_id, project_id, file_id, 
      data_key, file_name)
    values (#{expensesId}, #{projectId}, #{fileId}, #{dataKey},#{fileName})
  </insert>
  <select id="getFileExpenseNum">
     select count(*) exp_num from tb_file_expenses_relat fe,tb_expenses e 
     where fe.expenses_id=e.id and file_id=#{fileId}
     and e.item_id=#{itemId} and e.item_type=#{itemType}
  </select>
  <select id="getAllRunExpensesByUser" resultMap="extraResultMap" >
    select e.id, e.user_id, e.item_id, e.price, e.create_date, e.remark,a.app_Name,
    GROUP_CONCAT(fe.file_name SEPARATOR ',') file_infos
    from tb_expenses e,tb_file_expenses_relat fe,tb_app a
    where e.item_id=a.app_id and e.id=fe.expenses_id and e.user_id = #{userId}
    group by e.id
  </select>
  <select id="getTotalExpensesByUser" resultType="java.math.BigDecimal">
    select sum(price) from tb_expenses where user_id=#{userId}
  </select>
</mapper>