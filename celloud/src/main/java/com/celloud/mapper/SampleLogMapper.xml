<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.celloud.mapper.SampleLogMapper" >
  <resultMap id="BaseResultMap" type="com.celloud.model.mysql.SampleLog" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="sample_id" property="sampleId" jdbcType="INTEGER" />
    <result column="user_id" property="userId" jdbcType="INTEGER" />
    <result column="exper_state" property="experState" jdbcType="INTEGER" />
    <result column="create_date" property="createDate" jdbcType="TIMESTAMP" />
    <result column="state" property="state" jdbcType="BIT" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, sample_id, user_id, exper_state, create_date, state
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from tb_sample_log
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from tb_sample_log
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.celloud.model.mysql.SampleLog" >
    insert into tb_sample_log (id, sample_id, user_id, 
      exper_state, create_date, state
      )
    values (#{id,jdbcType=INTEGER}, #{sampleId,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, 
      #{experState,jdbcType=INTEGER}, #{createDate,jdbcType=TIMESTAMP}, #{state,jdbcType=BIT}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.celloud.model.mysql.SampleLog" >
    insert into tb_sample_log
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="sampleId != null" >
        sample_id,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
      <if test="experState != null" >
        exper_state,
      </if>
      <if test="createDate != null" >
        create_date,
      </if>
      <if test="state != null" >
        state,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="sampleId != null" >
        #{sampleId,jdbcType=INTEGER},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="experState != null" >
        #{experState,jdbcType=INTEGER},
      </if>
      <if test="createDate != null" >
        #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="state != null" >
        #{state,jdbcType=BIT},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.celloud.model.mysql.SampleLog" >
    update tb_sample_log
    <set >
      <if test="sampleId != null" >
        sample_id = #{sampleId,jdbcType=INTEGER},
      </if>
      <if test="userId != null" >
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="experState != null" >
        exper_state = #{experState,jdbcType=INTEGER},
      </if>
      <if test="createDate != null" >
        create_date = #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="state != null" >
        state = #{state,jdbcType=BIT},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.celloud.model.mysql.SampleLog" >
    update tb_sample_log
    set sample_id = #{sampleId,jdbcType=INTEGER},
      user_id = #{userId,jdbcType=INTEGER},
      exper_state = #{experState,jdbcType=INTEGER},
      create_date = #{createDate,jdbcType=TIMESTAMP},
      state = #{state,jdbcType=BIT}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="deleteBySampleId" parameterType="java.lang.Integer" >
    update tb_sample_log
    <set >
      <if test="state != null" >
        state = #{state,jdbcType=BIT},
      </if>
    </set>
    where sample_id = #{sampleId,jdbcType=INTEGER}
  </update>
</mapper>