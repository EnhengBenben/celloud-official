<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.celloud.mapper.NoticeMapper">
	<resultMap id="BaseResultMap" type="com.celloud.model.mysql.Notice">
		<id column="notice_id" property="noticeId" jdbcType="INTEGER" />
		<result column="notice_title" property="noticeTitle" jdbcType="VARCHAR" />
		<result column="category" property="category" jdbcType="VARCHAR" />
		<result column="notice_title" property="noticeTitle" jdbcType="VARCHAR" />
		<result column="type" property="type" jdbcType="VARCHAR" />
		<result column="create_date" property="createDate" jdbcType="TIMESTAMP" />
		<result column="expire_date" property="expireDate" jdbcType="TIMESTAMP" />
		<result column="notice_context" property="noticeContext" jdbcType="LONGVARCHAR" />
		<result column="state" property="state" jdbcType="INTEGER" />
		<result column="read_state" property="readState" jdbcType="INTEGER" />
	</resultMap>
	<sql id="Base_Column_List">
		notice_id, notice_title, create_date, expire_date, state,notice_context,type,category
	</sql>
	<sql id="Join_Column_List">
		tb_notice.notice_id, tb_notice.notice_title, tb_notice.create_date, tb_notice.expire_date,
		tb_notice.state,tb_notice.notice_context, tb_notice.type, tb_notice.category,tb_notice_user.state as read_state
	</sql>
	<select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer">
		select
		<include refid="Base_Column_List" />
		from tb_notice
		where notice_id = #{noticeId,jdbcType=INTEGER}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
		delete from tb_notice
		where notice_id =
		#{noticeId,jdbcType=INTEGER}
	</delete>
	<insert id="insert" parameterType="com.celloud.model.mysql.Notice" useGeneratedKeys="true" keyProperty="noticeId">
		insert
		into tb_notice (notice_id, notice_title, create_date,
		expire_date, notice_context,type,category
		)
		values
		(#{noticeId,jdbcType=INTEGER},
		#{noticeTitle,jdbcType=VARCHAR}, #{createDate,jdbcType=TIMESTAMP},
		#{expireDate,jdbcType=TIMESTAMP},
		#{noticeContext,jdbcType=LONGVARCHAR},#{type,jdbcType=VARCHAR},,#{category,jdbcType=VARCHAR},
		)
	</insert>
	<insert id="insertNoticeUser">
		insert into tb_notice_user (notice_id,user_id)
		select ${noticeId},user_id from tb_user where username in
		(
		<foreach collection="usernames" item="username" separator=",">
			#{username}
		</foreach>
		)
	</insert>
	<insert id="insertNoticeAllUser">
		insert into tb_notice_user (notice_id,user_id)
		select ${noticeId},user_id from tb_user
	</insert>
	<insert id="insertSelective" parameterType="com.celloud.model.mysql.Notice" useGeneratedKeys="true" keyProperty="noticeId">
		insert into tb_notice
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="noticeId != null">
				notice_id,
			</if>
			<if test="noticeTitle != null">
				notice_title,
			</if>
			<if test="createDate != null">
				create_date,
			</if>
			<if test="expireDate != null">
				expire_date,
			</if>
			<if test="state != null">
				state,
			</if>
			<if test="noticeContext != null">
				notice_context,
			</if>
			<if test="type != null">
				type,
			</if>
			<if test="category != null">
				category,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="noticeId != null">
				#{noticeId,jdbcType=INTEGER},
			</if>
			<if test="noticeTitle != null">
				#{noticeTitle,jdbcType=VARCHAR},
			</if>
			<if test="createDate != null">
				#{createDate,jdbcType=TIMESTAMP},
			</if>
			<if test="expireDate != null">
				#{expireDate,jdbcType=TIMESTAMP},
			</if>
			<if test="state != null">
				#{state,jdbcType=INTEGER},
			</if>
			<if test="noticeContext != null">
				#{noticeContext,jdbcType=LONGVARCHAR},
			</if>
			<if test="type != null">
				#{type,jdbcType=LONGVARCHAR},
			</if>
			<if test="category != null">
				#{category,jdbcType=LONGVARCHAR},
			</if>
		</trim>
	</insert>
	<update id="updateByPrimaryKeySelective" parameterType="com.celloud.model.mysql.Notice">
		update tb_notice
		<set>
			<if test="noticeTitle != null">
				notice_title = #{noticeTitle,jdbcType=VARCHAR},
			</if>
			<if test="createDate != null">
				create_date = #{createDate,jdbcType=TIMESTAMP},
			</if>
			<if test="expireDate != null">
				expire_date = #{expireDate,jdbcType=TIMESTAMP},
			</if>
			<if test="state != null">
				state = #{state,jdbcType=INTEGER},
			</if>
			<if test="noticeContext != null">
				notice_context = #{noticeContext,jdbcType=LONGVARCHAR},
			</if>
		</set>
		where notice_id = #{noticeId,jdbcType=INTEGER}
	</update>
	<update id="updateByPrimaryKeyWithBLOBs" parameterType="com.celloud.model.mysql.Notice">
		update tb_notice
		set notice_title =
		#{noticeTitle,jdbcType=VARCHAR},
		create_date = #{createDate,jdbcType=TIMESTAMP},
		expire_date =
		#{expireDate,jdbcType=TIMESTAMP},
		state = #{state,jdbcType=INTEGER},
		notice_context =
		#{noticeContext,jdbcType=LONGVARCHAR}
		where notice_id = #{noticeId,jdbcType=INTEGER}
	</update>
	<update id="updateByPrimaryKey" parameterType="com.celloud.model.mysql.Notice">
		update tb_notice
		set notice_title =
		#{noticeTitle,jdbcType=VARCHAR},
		create_date = #{createDate,jdbcType=TIMESTAMP},
		expire_date =
		#{expireDate,jdbcType=TIMESTAMP},
		state = #{state,jdbcType=INTEGER}
		where notice_id = #{noticeId,jdbcType=INTEGER}
	</update>
	<update id="readMessage">
		update tb_notice_user
		set state = 1
		where
		notice_id in (
		<foreach collection="noticeIds" item="noticeId" separator=",">
			#{noticeId,jdbcType=INTEGER}
		</foreach>
		)
		and user_id = #{userId,jdbcType=INTEGER}
	</update>
	<update id="readAll">
		update tb_notice_user
		set state = 1
		where user_id = #{userId,jdbcType=INTEGER} and notice_id in (
			select notice_id from tb_notice where  type = #{type,jdbcType=VARCHAR}
		)
	</update>
	<select id="pageUserUnreadNotices" resultMap="BaseResultMap">
		select
		<include refid="Join_Column_List" />
		from tb_notice
		left join tb_notice_user on
		tb_notice_user.notice_id=tb_notice.notice_id and
		tb_notice_user.user_id=#{userId,jdbcType=INTEGER}
		where tb_notice.notice_id in ( select notice_id from
		tb_notice_user
		where user_id = #{userId,jdbcType=INTEGER})
		and
		tb_notice_user.state = 0
		and tb_notice.type=#{type,jdbcType=VARCHAR}
		order by tb_notice_user.state
		asc,
		tb_notice.create_date desc
	</select>
	<select id="pageUserNotices" resultMap="BaseResultMap">
		select
		<include refid="Join_Column_List" />
		from tb_notice
		left join tb_notice_user on
		tb_notice_user.notice_id=tb_notice.notice_id and
		tb_notice_user.user_id=#{userId,jdbcType=INTEGER}
		where tb_notice.notice_id in ( select notice_id from
		tb_notice_user
		where user_id = #{userId,jdbcType=INTEGER})
		and type=#{type,jdbcType=VARCHAR}
		order by
		tb_notice_user.state asc,
		tb_notice.create_date desc
	</select>
	<delete id="deleteMessageRelat">
		delete from tb_notice_user
		where notice_id in (
		<foreach collection="noticeIds" item="noticeId" separator=",">
			#{noticeId,jdbcType=INTEGER}
		</foreach>
		)
		and user_id =
		#{userId,jdbcType=INTEGER}
	</delete>
	<delete id="deleteMessages">
		delete from tb_notice
		where (not exists
		(select notice_id from tb_notice_user where
		tb_notice_user.notice_id=tb_notice.notice_id))
		and notice_id in (
		<foreach collection="noticeIds" item="noticeId" separator=",">
			#{noticeId,jdbcType=INTEGER}
		</foreach>
		)
	</delete>
</mapper>