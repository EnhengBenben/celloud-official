<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.celloud.backstage.mapper.FindPwdMapper" >
  <resultMap id="BaseResultMap" type="com.celloud.backstage.model.FindPwd" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="user_id" property="userId" jdbcType="INTEGER" />
    <result column="expire_date" property="expireDate" jdbcType="TIMESTAMP" />
    <result column="md5" property="md5" jdbcType="VARCHAR" />
    <result column="email" property="email" jdbcType="VARCHAR" />
    <result column="state" property="state" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, user_id, expire_date, md5, email, state
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from tb_user_find_pwd
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from tb_user_find_pwd
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.celloud.backstage.model.FindPwd" >
    insert into tb_user_find_pwd (id, user_id, expire_date, 
      md5, email, state)
    values (#{id,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, #{expireDate,jdbcType=TIMESTAMP}, 
      #{md5,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR}, #{state,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.celloud.backstage.model.FindPwd" >
    insert into tb_user_find_pwd
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
      <if test="expireDate != null" >
        expire_date,
      </if>
      <if test="md5 != null" >
        md5,
      </if>
      <if test="email != null" >
        email,
      </if>
      <if test="state != null" >
        state,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="expireDate != null" >
        #{expireDate,jdbcType=TIMESTAMP},
      </if>
      <if test="md5 != null" >
        #{md5,jdbcType=VARCHAR},
      </if>
      <if test="email != null" >
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="state != null" >
        #{state,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.celloud.backstage.model.FindPwd" >
    update tb_user_find_pwd
    <set >
      <if test="userId != null" >
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="expireDate != null" >
        expire_date = #{expireDate,jdbcType=TIMESTAMP},
      </if>
      <if test="md5 != null" >
        md5 = #{md5,jdbcType=VARCHAR},
      </if>
      <if test="email != null" >
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="state != null" >
        state = #{state,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.celloud.backstage.model.FindPwd" >
    update tb_user_find_pwd
    set user_id = #{userId,jdbcType=INTEGER},
      expire_date = #{expireDate,jdbcType=TIMESTAMP},
      md5 = #{md5,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      state = #{state,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>