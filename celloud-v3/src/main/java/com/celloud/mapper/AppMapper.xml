<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.celloud.mapper.AppMapper" >
  <resultMap id="miniBaseMap" type="com.celloud.model.App">
    <id column="app_id" property="appId" jdbcType="INTEGER" />
    <result column="app_name" property="appName" jdbcType="VARCHAR" />
    <result column="data_num" property="dataNum" jdbcType="INTEGER" />
  </resultMap>
  <resultMap id="BaseResultMap" type="com.celloud.model.App" extends="miniBaseMap" >
    <result column="english_name" property="englishName" jdbcType="VARCHAR" />
    <result column="address" property="address" jdbcType="VARCHAR" />
    <result column="picture_name" property="pictureName" jdbcType="VARCHAR" />
    <result column="create_date" property="createDate" jdbcType="TIMESTAMP" />
    <result column="intro" property="intro" jdbcType="VARCHAR" />
    <result column="description" property="description" jdbcType="VARCHAR" />
    <result column="company_id" property="companyId" jdbcType="INTEGER" />
    <result column="attribute" property="attribute" jdbcType="INTEGER" />
    <result column="run_type" property="runType" jdbcType="INTEGER" />
    <result column="flag" property="flag" jdbcType="INTEGER" />
    <result column="run_data" property="runData" jdbcType="INTEGER" />
    <result column="param" property="param" jdbcType="INTEGER" />
    <result column="off_line" property="offLine" jdbcType="INTEGER" />
    <result column="command" property="command" jdbcType="VARCHAR" />
    <result column="title" property="title" jdbcType="VARCHAR" />
    <result column="method" property="method" jdbcType="VARCHAR" />
    <result column="max_task" property="maxTask" jdbcType="INTEGER" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.celloud.model.App" extends="BaseResultMap" >
    <result column="app_doc" property="appDoc" jdbcType="LONGVARCHAR" />
  </resultMap>
  <resultMap id="extraResultMap" type="com.celloud.model.App" extends="BaseResultMap" >
    <result column="company_Name" property="companyName" jdbcType="VARCHAR" />
    <result column="is_add" property="isAdded" jdbcType="VARCHAR" />
    <result column="classifyNames" property="classifyNames" jdbcType="VARCHAR" />
    <result column="app_doc" property="appDoc" jdbcType="LONGVARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    app_id, app_name, english_name, address, picture_name, create_date, intro, description, 
    company_id, attribute, run_type, flag, run_data, data_num, param, off_line, command, 
    title, method, max_task
  </sql>
  <sql id="Blob_Column_List" >
    app_doc
  </sql>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from tb_app
    where app_id = #{appId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from tb_app
    where app_id = #{appId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.celloud.model.App" >
    insert into tb_app (app_id, app_name, english_name, 
      address, picture_name, create_date, 
      intro, description, company_id, 
      attribute, run_type, flag, 
      run_data, data_num, param, 
      off_line, command, title, 
      method, app_doc)
    values (#{appId,jdbcType=INTEGER}, #{appName,jdbcType=VARCHAR}, #{englishName,jdbcType=VARCHAR}, 
      #{address,jdbcType=VARCHAR}, #{pictureName,jdbcType=VARCHAR}, #{createDate,jdbcType=TIMESTAMP}, 
      #{intro,jdbcType=VARCHAR}, #{description,jdbcType=VARCHAR}, #{companyId,jdbcType=INTEGER}, 
      #{attribute,jdbcType=INTEGER}, #{runType,jdbcType=INTEGER}, #{flag,jdbcType=INTEGER}, 
      #{runData,jdbcType=INTEGER}, #{dataNum,jdbcType=INTEGER}, #{param,jdbcType=INTEGER}, 
      #{offLine,jdbcType=INTEGER}, #{command,jdbcType=VARCHAR}, #{title,jdbcType=VARCHAR}, 
      #{method,jdbcType=VARCHAR}, #{appDoc,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.celloud.model.App" >
    insert into tb_app
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="appId != null" >
        app_id,
      </if>
      <if test="appName != null" >
        app_name,
      </if>
      <if test="englishName != null" >
        english_name,
      </if>
      <if test="address != null" >
        address,
      </if>
      <if test="pictureName != null" >
        picture_name,
      </if>
      <if test="createDate != null" >
        create_date,
      </if>
      <if test="intro != null" >
        intro,
      </if>
      <if test="description != null" >
        description,
      </if>
      <if test="companyId != null" >
        company_id,
      </if>
      <if test="attribute != null" >
        attribute,
      </if>
      <if test="runType != null" >
        run_type,
      </if>
      <if test="flag != null" >
        flag,
      </if>
      <if test="runData != null" >
        run_data,
      </if>
      <if test="dataNum != null" >
        data_num,
      </if>
      <if test="param != null" >
        param,
      </if>
      <if test="offLine != null" >
        off_line,
      </if>
      <if test="command != null" >
        command,
      </if>
      <if test="title != null" >
        title,
      </if>
      <if test="method != null" >
        method,
      </if>
      <if test="appDoc != null" >
        app_doc,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="appId != null" >
        #{appId,jdbcType=INTEGER},
      </if>
      <if test="appName != null" >
        #{appName,jdbcType=VARCHAR},
      </if>
      <if test="englishName != null" >
        #{englishName,jdbcType=VARCHAR},
      </if>
      <if test="address != null" >
        #{address,jdbcType=VARCHAR},
      </if>
      <if test="pictureName != null" >
        #{pictureName,jdbcType=VARCHAR},
      </if>
      <if test="createDate != null" >
        #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="intro != null" >
        #{intro,jdbcType=VARCHAR},
      </if>
      <if test="description != null" >
        #{description,jdbcType=VARCHAR},
      </if>
      <if test="companyId != null" >
        #{companyId,jdbcType=INTEGER},
      </if>
      <if test="attribute != null" >
        #{attribute,jdbcType=INTEGER},
      </if>
      <if test="runType != null" >
        #{runType,jdbcType=INTEGER},
      </if>
      <if test="flag != null" >
        #{flag,jdbcType=INTEGER},
      </if>
      <if test="runData != null" >
        #{runData,jdbcType=INTEGER},
      </if>
      <if test="dataNum != null" >
        #{dataNum,jdbcType=INTEGER},
      </if>
      <if test="param != null" >
        #{param,jdbcType=INTEGER},
      </if>
      <if test="offLine != null" >
        #{offLine,jdbcType=INTEGER},
      </if>
      <if test="command != null" >
        #{command,jdbcType=VARCHAR},
      </if>
      <if test="title != null" >
        #{title,jdbcType=VARCHAR},
      </if>
      <if test="method != null" >
        #{method,jdbcType=VARCHAR},
      </if>
      <if test="appDoc != null" >
        #{appDoc,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.celloud.model.App" >
    update tb_app
    <set >
      <if test="appName != null" >
        app_name = #{appName,jdbcType=VARCHAR},
      </if>
      <if test="englishName != null" >
        english_name = #{englishName,jdbcType=VARCHAR},
      </if>
      <if test="address != null" >
        address = #{address,jdbcType=VARCHAR},
      </if>
      <if test="pictureName != null" >
        picture_name = #{pictureName,jdbcType=VARCHAR},
      </if>
      <if test="createDate != null" >
        create_date = #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="intro != null" >
        intro = #{intro,jdbcType=VARCHAR},
      </if>
      <if test="description != null" >
        description = #{description,jdbcType=VARCHAR},
      </if>
      <if test="companyId != null" >
        company_id = #{companyId,jdbcType=INTEGER},
      </if>
      <if test="attribute != null" >
        attribute = #{attribute,jdbcType=INTEGER},
      </if>
      <if test="runType != null" >
        run_type = #{runType,jdbcType=INTEGER},
      </if>
      <if test="flag != null" >
        flag = #{flag,jdbcType=INTEGER},
      </if>
      <if test="runData != null" >
        run_data = #{runData,jdbcType=INTEGER},
      </if>
      <if test="dataNum != null" >
        data_num = #{dataNum,jdbcType=INTEGER},
      </if>
      <if test="param != null" >
        param = #{param,jdbcType=INTEGER},
      </if>
      <if test="offLine != null" >
        off_line = #{offLine,jdbcType=INTEGER},
      </if>
      <if test="command != null" >
        command = #{command,jdbcType=VARCHAR},
      </if>
      <if test="title != null" >
        title = #{title,jdbcType=VARCHAR},
      </if>
      <if test="method != null" >
        method = #{method,jdbcType=VARCHAR},
      </if>
      <if test="appDoc != null" >
        app_doc = #{appDoc,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where app_id = #{appId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.celloud.model.App" >
    update tb_app
    set app_name = #{appName,jdbcType=VARCHAR},
      english_name = #{englishName,jdbcType=VARCHAR},
      address = #{address,jdbcType=VARCHAR},
      picture_name = #{pictureName,jdbcType=VARCHAR},
      create_date = #{createDate,jdbcType=TIMESTAMP},
      intro = #{intro,jdbcType=VARCHAR},
      description = #{description,jdbcType=VARCHAR},
      company_id = #{companyId,jdbcType=INTEGER},
      attribute = #{attribute,jdbcType=INTEGER},
      run_type = #{runType,jdbcType=INTEGER},
      flag = #{flag,jdbcType=INTEGER},
      run_data = #{runData,jdbcType=INTEGER},
      data_num = #{dataNum,jdbcType=INTEGER},
      param = #{param,jdbcType=INTEGER},
      off_line = #{offLine,jdbcType=INTEGER},
      command = #{command,jdbcType=VARCHAR},
      title = #{title,jdbcType=VARCHAR},
      method = #{method,jdbcType=VARCHAR},
      app_doc = #{appDoc,jdbcType=LONGVARCHAR}
    where app_id = #{appId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.celloud.model.App" >
    update tb_app
    set app_name = #{appName,jdbcType=VARCHAR},
      english_name = #{englishName,jdbcType=VARCHAR},
      address = #{address,jdbcType=VARCHAR},
      picture_name = #{pictureName,jdbcType=VARCHAR},
      create_date = #{createDate,jdbcType=TIMESTAMP},
      intro = #{intro,jdbcType=VARCHAR},
      description = #{description,jdbcType=VARCHAR},
      company_id = #{companyId,jdbcType=INTEGER},
      attribute = #{attribute,jdbcType=INTEGER},
      run_type = #{runType,jdbcType=INTEGER},
      flag = #{flag,jdbcType=INTEGER},
      run_data = #{runData,jdbcType=INTEGER},
      data_num = #{dataNum,jdbcType=INTEGER},
      param = #{param,jdbcType=INTEGER},
      off_line = #{offLine,jdbcType=INTEGER},
      command = #{command,jdbcType=VARCHAR},
      title = #{title,jdbcType=VARCHAR},
      method = #{method,jdbcType=VARCHAR}
    where app_id = #{appId,jdbcType=INTEGER}
  </update>
  <select id="countMyApp" resultType="java.lang.Integer" >
    select count(a.app_id) from tb_user_app_right uar left join tb_app a on uar.app_id=a.app_id where uar.user_id=#{userId } and a.off_line=#{offLine } and uar.is_add=#{isAdd }
  </select>
  <select id="countMyAppByTime" resultType="map" >
	select date_format(p.create_date,#{time }) time,sum(p.data_num) num from tb_user_app_right uar left join tb_app a on uar.app_id=a.app_id 
	left join tb_report r on a.app_id=r.app_id
	left join tb_project p on p.project_id=r.project_id
	where uar.user_id=#{userId } and uar.is_add=#{isAdd } and a.off_line=#{offLine } and r.user_id=#{userId } and r.flag=#{flag } group by time
  </select>
  <select id="getRanAPP" resultType="map">
  	select s.app_id,app_name,count(*) as num from (select project_id from tb_project where user_id = #{userId } and state = 0 union all select p.project_id from tb_project p,tb_project_share s where p.state=0 and p.project_id=s.project_id and s.share_to = #{userId }) as p,tb_report as r,tb_app s where r.project_id = p.project_id and r.app_id = s.app_id group by app_id order by num desc , app_name;
  </select>
  <select id="getAppByClassify" resultMap="BaseResultMap"  >
    select DISTINCT a.app_id,a.app_name,a.picture_name,a.intro,a.description,a.create_date 
    from tb_app a 
    left join tb_app_classify_relat ac on a.app_id=ac.app_id 
    left join tb_user_app_right uar on uar.app_id = a.app_id 
    where ac.classify_id=#{classifyId } and a.off_line=#{offLine } and ((uar.user_id=#{userId } and a.attribute=#{attribute_private }) or a.attribute=#{attribute_public })
  </select>
  <select id="getAppPageListByClassify" resultMap="extraResultMap">
        select DISTINCT a.app_id,a.app_name,a.picture_name,a.intro,a.description,a.create_date,c.company_name 
        from tb_app a 
        left join tb_app_classify_relat ac on a.app_id=ac.app_id 
        left join  tb_user_app_right uar on uar.app_id = a.app_id 
        left join tb_company c on a.company_id=c.company_id
        where a.off_line=#{offLine } and ((uar.user_id=#{userId } and a.attribute=#{attribute_private }) or a.attribute=#{attribute_public })
         <choose>  
            <when test="classifyPId == 0">
                and ac.classify_id in (select classify_id from tb_classify c where classify_pid = #{classifyId })
            </when>
            <otherwise>  
                and ac.classify_id=#{classifyId }
            </otherwise>  
        </choose>
        <if test="sortField!=''">
            order by ${sortField } ${sortType },a.app_id
        </if>
    </select>
    <select id="getAppById" resultMap="extraResultMap"  >
    select a.app_id,a.app_name,a.english_name,a.address,a.picture_name,a.create_date,a.intro,a.description,a.app_doc,a.data_num,
    c.company_name,GROUP_CONCAT(distinct cls.classify_name) classifyNames,(select ua.is_add from tb_user_app_right ua where ua.user_id=#{userId } and ua.app_id=#{appId}) is_add
    from tb_app a
    left join tb_company c on a.company_id=c.company_id 
    left join tb_app_classify_relat ac on a.app_id=ac.app_id 
    left join tb_classify cls on ac.classify_id=cls.classify_id where a.app_id=#{appId}
  </select>
  <select id="getMyAppList" resultMap="extraResultMap"  >
    select a.app_id,a.app_name,a.picture_name,a.intro,a.description,a.create_date,GROUP_CONCAT(distinct c.classify_name) classifyNames,com.company_name 
    from tb_user_app_right ua 
    left join tb_app a on ua.app_id=a.app_id 
    left join tb_app_classify_relat ac on a.app_id=ac.app_id 
    left join tb_classify c on c.classify_id=ac.classify_id 
    left join tb_company com on a.company_id=com.company_id where ua.user_id=#{userId } and a.off_line=#{offLine } and ua.is_add=#{isAdd } group by a.app_id order by create_date desc
  </select>
  <update id="userUpdateApp" >
    update tb_user_app_right set is_add=#{isAdd } where user_id=#{userId } and app_id=#{appId }
  </update>
  <select id="countWeekByUserId" resultType="map">
  	select left(date_add(r.create_date ,INTERVAL -weekday(r.create_date ) day),10)time,count(r.report_id)as runNum from tb_report r 
	where r.flag =0 and r.user_id = ${userId}
	group by time order by time desc
  </select>
  <select id="findAppsByFormat" resultMap="miniBaseMap">
    select a.app_id,app_name,data_num 
    from tb_app a 
    left join tb_app_format_relat af on a.app_id = af.app_id 
    left join tb_user_app_right ua on a.app_id=ua.app_id 
    where af.format_id = #{formatId} and a.off_line = #{offLine} and ua.user_id=#{userId} and ua.is_add=#{isAdd}
  </select>
  <select id="findAppsByIds" resultMap="BaseResultMap">
    select <include refid="Base_Column_List" /> from tb_app where app_id in (${appIds})
  </select>
</mapper>
