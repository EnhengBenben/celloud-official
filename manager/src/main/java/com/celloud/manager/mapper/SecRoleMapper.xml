<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.celloud.manager.mapper.SecRoleMapper">
	<resultMap id="BaseResultMap" type="com.celloud.manager.model.SecRole">
		<id column="id" property="id" jdbcType="INTEGER" />
		<result column="code" property="code" jdbcType="VARCHAR" />
		<result column="name" property="name" jdbcType="VARCHAR" />
		<result column="description" property="description" jdbcType="VARCHAR" />
		<result column="disabled" property="disabled" jdbcType="BIT" />
		<result column="create_date" property="createDate" jdbcType="TIMESTAMP" />
		<result column="parent_id" property="parentId" jdbcType="INTEGER" />
    	<result column="mutex" property="mutex" jdbcType="VARCHAR" />
    	<result column="attract" property="attract" jdbcType="VARCHAR" />
	</resultMap>
	<sql id="Base_Column_List">
		id, code, description, disabled, name, create_date, parent_id, mutex, attract
	</sql>
	<select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer">
		select
		<include refid="Base_Column_List" />
		from tb_sec_role
		where id = #{id,jdbcType=INTEGER}
	</select>
	<select id="findRolesByUserId" resultMap="BaseResultMap" parameterType="java.lang.Integer">
		select distinct parent.* from tb_sec_role parent, tb_sec_role child, tb_sec_user_role_relat ur
		where 
		(parent.id = child.parent_id or parent.id = child.id) 
		and child.id = ur.role_id 
		and ur.user_id = #{id,jdbcType=INTEGER} 
		order by parent.id asc;
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
		delete from tb_sec_role
		where id = #{id,jdbcType=INTEGER}
	</delete>
	<insert id="insert" parameterType="com.celloud.manager.model.SecRole">
		insert into tb_sec_role (id, code, name, description,
		disabled)
		values (#{id,jdbcType=INTEGER}, #{code,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, #{description,jdbcType=VARCHAR},
		#{disabled,jdbcType=BIT})
	</insert>
	<insert id="insertSelective" parameterType="com.celloud.manager.model.SecRole">
		insert into tb_sec_role
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="id != null">
				id,
			</if>
			<if test="code != null">
                code,
            </if>
			<if test="name != null">
				name,
			</if>
			<if test="description != null">
				description,
			</if>
			<if test="disabled != null">
				disabled,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="id != null">
				#{id,jdbcType=INTEGER},
			</if>
			<if test="code != null">
                #{code,jdbcType=VARCHAR},
            </if>
			<if test="name != null">
				#{name,jdbcType=VARCHAR},
			</if>
			<if test="description != null">
				#{description,jdbcType=VARCHAR},
			</if>
			<if test="disabled != null">
				#{disabled,jdbcType=BIT},
			</if>
		</trim>
	</insert>
	<update id="updateByPrimaryKeySelective" parameterType="com.celloud.manager.model.SecRole">
		update tb_sec_role
		<set>
		    <if test="code != null">
                code = #{code,jdbcType=VARCHAR},
            </if>
			<if test="name != null">
				name = #{name,jdbcType=VARCHAR},
			</if>
			<if test="description != null">
				description = #{description,jdbcType=VARCHAR},
			</if>
			<if test="disabled != null">
				disabled = #{disabled,jdbcType=BIT},
			</if>
		</set>
		where id = #{id,jdbcType=INTEGER}
	</update>
	<update id="updateByPrimaryKey" parameterType="com.celloud.manager.model.SecRole">
		update tb_sec_role
		set code = #{code,jdbcType=VARCHAR},
		name = #{name,jdbcType=VARCHAR},
		description = #{description,jdbcType=VARCHAR},
		disabled = #{disabled,jdbcType=BIT}
		where id = #{id,jdbcType=INTEGER}
	</update>
	<delete id="deleteByUserId">
	   delete from tb_sec_user_role_relat where user_id = #{userId}
	</delete>
	<select id="findRoleByIds" resultMap="BaseResultMap">
	   SELECT
	   <include refid="Base_Column_List"/>
	   FROM tb_sec_role
	   WHERE id
	   IN
	   <foreach collection="roleIds" item="roleId" separator="," open="(" close=")">
	       #{roleId}
	   </foreach>
	</select>
</mapper>