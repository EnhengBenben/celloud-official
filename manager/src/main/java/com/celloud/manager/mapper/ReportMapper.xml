<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.celloud.manager.mapper.ReportMapper" >
  <resultMap id="BaseResultMap" type="com.celloud.manager.model.Report" >
    <id column="report_id" property="reportId" jdbcType="INTEGER" />
    <result column="user_id" property="userId" jdbcType="INTEGER" />
    <result column="app_id" property="appId" jdbcType="INTEGER" />
    <result column="file_id" property="fileId" jdbcType="INTEGER" />
    <result column="project_id" property="projectId" jdbcType="INTEGER" />
    <result column="period" property="period" jdbcType="INTEGER" />
    <result column="flag" property="flag" jdbcType="INTEGER" />
    <result column="readed" property="readed" jdbcType="INTEGER" />
    <result column="create_date" property="createDate" jdbcType="TIMESTAMP" />
    <result column="state" property="state" jdbcType="INTEGER" />
    <result column="end_date" property="endDate" jdbcType="TIMESTAMP" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.celloud.manager.model.ReportWithBLOBs" extends="BaseResultMap" >
    <result column="print_context" property="printContext" jdbcType="LONGVARCHAR" />
    <result column="context" property="context" jdbcType="LONGVARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    report_id, user_id, app_id, file_id, project_id, period, flag, readed, create_date, 
    state, end_date
  </sql>
  <sql id="Blob_Column_List" >
    print_context, context
  </sql>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from tb_report
    where report_id = #{reportId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from tb_report
    where report_id = #{reportId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.celloud.manager.model.ReportWithBLOBs" >
    insert into tb_report (report_id, user_id, app_id, 
      file_id, project_id, period, 
      flag, readed, create_date, 
      state, end_date, print_context, 
      context)
    values (#{reportId,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, #{appId,jdbcType=INTEGER}, 
      #{fileId,jdbcType=INTEGER}, #{projectId,jdbcType=INTEGER}, #{period,jdbcType=INTEGER}, 
      #{flag,jdbcType=INTEGER}, #{readed,jdbcType=INTEGER}, #{createDate,jdbcType=TIMESTAMP}, 
      #{state,jdbcType=INTEGER}, #{endDate,jdbcType=TIMESTAMP}, #{printContext,jdbcType=LONGVARCHAR}, 
      #{context,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.celloud.manager.model.ReportWithBLOBs" >
    insert into tb_report
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="reportId != null" >
        report_id,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
      <if test="appId != null" >
        app_id,
      </if>
      <if test="fileId != null" >
        file_id,
      </if>
      <if test="projectId != null" >
        project_id,
      </if>
      <if test="period != null" >
        period,
      </if>
      <if test="flag != null" >
        flag,
      </if>
      <if test="readed != null" >
        readed,
      </if>
      <if test="createDate != null" >
        create_date,
      </if>
      <if test="state != null" >
        state,
      </if>
      <if test="endDate != null" >
        end_date,
      </if>
      <if test="printContext != null" >
        print_context,
      </if>
      <if test="context != null" >
        context,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="reportId != null" >
        #{reportId,jdbcType=INTEGER},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="appId != null" >
        #{appId,jdbcType=INTEGER},
      </if>
      <if test="fileId != null" >
        #{fileId,jdbcType=INTEGER},
      </if>
      <if test="projectId != null" >
        #{projectId,jdbcType=INTEGER},
      </if>
      <if test="period != null" >
        #{period,jdbcType=INTEGER},
      </if>
      <if test="flag != null" >
        #{flag,jdbcType=INTEGER},
      </if>
      <if test="readed != null" >
        #{readed,jdbcType=INTEGER},
      </if>
      <if test="createDate != null" >
        #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="state != null" >
        #{state,jdbcType=INTEGER},
      </if>
      <if test="endDate != null" >
        #{endDate,jdbcType=TIMESTAMP},
      </if>
      <if test="printContext != null" >
        #{printContext,jdbcType=LONGVARCHAR},
      </if>
      <if test="context != null" >
        #{context,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.celloud.manager.model.ReportWithBLOBs" >
    update tb_report
    <set >
      <if test="userId != null" >
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="appId != null" >
        app_id = #{appId,jdbcType=INTEGER},
      </if>
      <if test="fileId != null" >
        file_id = #{fileId,jdbcType=INTEGER},
      </if>
      <if test="projectId != null" >
        project_id = #{projectId,jdbcType=INTEGER},
      </if>
      <if test="period != null" >
        period = #{period,jdbcType=INTEGER},
      </if>
      <if test="flag != null" >
        flag = #{flag,jdbcType=INTEGER},
      </if>
      <if test="readed != null" >
        readed = #{readed,jdbcType=INTEGER},
      </if>
      <if test="createDate != null" >
        create_date = #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="state != null" >
        state = #{state,jdbcType=INTEGER},
      </if>
      <if test="endDate != null" >
        end_date = #{endDate,jdbcType=TIMESTAMP},
      </if>
      <if test="printContext != null" >
        print_context = #{printContext,jdbcType=LONGVARCHAR},
      </if>
      <if test="context != null" >
        context = #{context,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where report_id = #{reportId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.celloud.manager.model.ReportWithBLOBs" >
    update tb_report
    set user_id = #{userId,jdbcType=INTEGER},
      app_id = #{appId,jdbcType=INTEGER},
      file_id = #{fileId,jdbcType=INTEGER},
      project_id = #{projectId,jdbcType=INTEGER},
      period = #{period,jdbcType=INTEGER},
      flag = #{flag,jdbcType=INTEGER},
      readed = #{readed,jdbcType=INTEGER},
      create_date = #{createDate,jdbcType=TIMESTAMP},
      state = #{state,jdbcType=INTEGER},
      end_date = #{endDate,jdbcType=TIMESTAMP},
      print_context = #{printContext,jdbcType=LONGVARCHAR},
      context = #{context,jdbcType=LONGVARCHAR}
    where report_id = #{reportId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.celloud.manager.model.Report" >
    update tb_report
    set user_id = #{userId,jdbcType=INTEGER},
      app_id = #{appId,jdbcType=INTEGER},
      file_id = #{fileId,jdbcType=INTEGER},
      project_id = #{projectId,jdbcType=INTEGER},
      period = #{period,jdbcType=INTEGER},
      flag = #{flag,jdbcType=INTEGER},
      readed = #{readed,jdbcType=INTEGER},
      create_date = #{createDate,jdbcType=TIMESTAMP},
      state = #{state,jdbcType=INTEGER},
      end_date = #{endDate,jdbcType=TIMESTAMP}
    where report_id = #{reportId,jdbcType=INTEGER}
  </update>
  <select id="countReport" resultType="java.lang.Integer">
  SELECT sum(a.data_num) from (
  select DISTINCT p.project_id,p.data_num
  from tb_user_company_relat ucr LEFT JOIN tb_user u on u.user_id=ucr.user_id LEFT JOIN tb_project p on p.user_id=u.user_id
  LEFT JOIN tb_report r on r.project_id=p.project_id
  where u.state=#{state} and r.state=#{state} and r.period=#{period} and p.state=#{state}
  <if test="companyId!=null">
    and ucr.company_id=#{companyId}
  </if>
  <if test="testAccountIds!=null">
    and p.user_id not in(${testAccountIds }) 
    </if>
  ) a;
  </select>
  <select id="countReportOfApp" resultType="java.util.Map">
  SELECT sum(a.data_num) reportNum,a.company_name companyName,a.app_id appId,a.company_id companyId from (
  select DISTINCT p.project_id,p.data_num,c.company_id,c.company_name,app.app_id,app.app_name
  from tb_user_company_relat ucr 
    LEFT JOIN tb_user u on u.user_id=ucr.user_id 
    LEFT JOIN tb_project p on p.user_id=u.user_id
  LEFT JOIN tb_report r on r.project_id=p.project_id
    LEFT JOIN tb_company c on c.company_id=u.company_id
    LEFT JOIN tb_app app on app.app_id=r.app_id
  where u.state=#{state} and r.state=#{state} and r.period=#{period} and p.state=#{state} and app.off_line=#{offLine} and c.state=#{state}
  <if test="companyId!=null">
    and ucr.company_id=#{companyId}
  </if>
  <if test="testAccountIds!=null">
    and p.user_id not in(${testAccountIds }) 
    </if>
  ) a GROUP BY a.company_id,a.app_id;
  </select>
</mapper>