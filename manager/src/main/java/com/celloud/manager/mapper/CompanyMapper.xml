<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.celloud.manager.mapper.CompanyMapper" >
  <resultMap id="BaseResultMap" type="com.celloud.manager.model.Company" >
    <id column="company_id" property="companyId" jdbcType="INTEGER" />
    <result column="company_name" property="companyName" jdbcType="VARCHAR" />
    <result column="english_name" property="englishName" jdbcType="VARCHAR" />
    <result column="company_icon" property="companyIcon" jdbcType="VARCHAR" />
    <result column="address" property="address" jdbcType="VARCHAR" />
    <result column="address_en" property="addressEn" jdbcType="VARCHAR" />
    <result column="zip_code" property="zipCode" jdbcType="VARCHAR" />
    <result column="tel" property="tel" jdbcType="VARCHAR" />
    <result column="state" property="state" jdbcType="INTEGER" />
    <result column="create_date" property="createDate" jdbcType="TIMESTAMP" />
    <result column="update_date" property="updateDate" jdbcType="TIMESTAMP" />
    <result column="province" property="province" jdbcType="VARCHAR" />
    <result column="city" property="city" jdbcType="VARCHAR" />
    <result column="address_detail" property="addressDetail" jdbcType="VARCHAR" />
    <result column="bigCustomerName" property="bigCustomerName" jdbcType="VARCHAR" />
    <result column="userNum" property="userNum" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    company_id, company_name, english_name, company_icon, address, address_en, zip_code, 
    tel, state, create_date, update_date, province, city, address_detail
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from tb_company
    where company_id = #{companyId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from tb_company
    where company_id = #{companyId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.celloud.manager.model.Company" >
    insert into tb_company (company_id, company_name, english_name, 
      company_icon, address, address_en, 
      zip_code, tel, state, 
      create_date, update_date, province, 
      city, address_detail)
    values (#{companyId,jdbcType=INTEGER}, #{companyName,jdbcType=VARCHAR}, #{englishName,jdbcType=VARCHAR}, 
      #{companyIcon,jdbcType=VARCHAR}, #{address,jdbcType=VARCHAR}, #{addressEn,jdbcType=VARCHAR}, 
      #{zipCode,jdbcType=VARCHAR}, #{tel,jdbcType=VARCHAR}, #{state,jdbcType=INTEGER}, 
      #{createDate,jdbcType=TIMESTAMP}, #{updateDate,jdbcType=TIMESTAMP}, #{province,jdbcType=VARCHAR}, 
      #{city,jdbcType=VARCHAR}, #{addressDetail,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.celloud.manager.model.Company" >
    insert into tb_company
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="companyId != null" >
        company_id,
      </if>
      <if test="companyName != null" >
        company_name,
      </if>
      <if test="englishName != null" >
        english_name,
      </if>
      <if test="companyIcon != null" >
        company_icon,
      </if>
      <if test="address != null" >
        address,
      </if>
      <if test="addressEn != null" >
        address_en,
      </if>
      <if test="zipCode != null" >
        zip_code,
      </if>
      <if test="tel != null" >
        tel,
      </if>
      <if test="state != null" >
        state,
      </if>
      <if test="createDate != null" >
        create_date,
      </if>
      <if test="updateDate != null" >
        update_date,
      </if>
      <if test="province != null" >
        province,
      </if>
      <if test="city != null" >
        city,
      </if>
      <if test="addressDetail != null" >
        address_detail,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="companyId != null" >
        #{companyId,jdbcType=INTEGER},
      </if>
      <if test="companyName != null" >
        #{companyName,jdbcType=VARCHAR},
      </if>
      <if test="englishName != null" >
        #{englishName,jdbcType=VARCHAR},
      </if>
      <if test="companyIcon != null" >
        #{companyIcon,jdbcType=VARCHAR},
      </if>
      <if test="address != null" >
        #{address,jdbcType=VARCHAR},
      </if>
      <if test="addressEn != null" >
        #{addressEn,jdbcType=VARCHAR},
      </if>
      <if test="zipCode != null" >
        #{zipCode,jdbcType=VARCHAR},
      </if>
      <if test="tel != null" >
        #{tel,jdbcType=VARCHAR},
      </if>
      <if test="state != null" >
        #{state,jdbcType=INTEGER},
      </if>
      <if test="createDate != null" >
        #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="updateDate != null" >
        #{updateDate,jdbcType=TIMESTAMP},
      </if>
      <if test="province != null" >
        #{province,jdbcType=VARCHAR},
      </if>
      <if test="city != null" >
        #{city,jdbcType=VARCHAR},
      </if>
      <if test="addressDetail != null" >
        #{addressDetail,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.celloud.manager.model.Company" >
    update tb_company
    <set >
      <if test="companyName != null" >
        company_name = #{companyName,jdbcType=VARCHAR},
      </if>
      <if test="englishName != null" >
        english_name = #{englishName,jdbcType=VARCHAR},
      </if>
      <if test="companyIcon != null" >
        company_icon = #{companyIcon,jdbcType=VARCHAR},
      </if>
      <if test="address != null" >
        address = #{address,jdbcType=VARCHAR},
      </if>
      <if test="addressEn != null" >
        address_en = #{addressEn,jdbcType=VARCHAR},
      </if>
      <if test="zipCode != null" >
        zip_code = #{zipCode,jdbcType=VARCHAR},
      </if>
      <if test="tel != null" >
        tel = #{tel,jdbcType=VARCHAR},
      </if>
      <if test="state != null" >
        state = #{state,jdbcType=INTEGER},
      </if>
      <if test="createDate != null" >
        create_date = #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="updateDate != null" >
        update_date = #{updateDate,jdbcType=TIMESTAMP},
      </if>
      <if test="province != null" >
        province = #{province,jdbcType=VARCHAR},
      </if>
      <if test="city != null" >
        city = #{city,jdbcType=VARCHAR},
      </if>
      <if test="addressDetail != null" >
        address_detail = #{addressDetail,jdbcType=VARCHAR},
      </if>
    </set>
    where company_id = #{companyId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.celloud.manager.model.Company" >
    update tb_company
    set company_name = #{companyName,jdbcType=VARCHAR},
      english_name = #{englishName,jdbcType=VARCHAR},
      company_icon = #{companyIcon,jdbcType=VARCHAR},
      address = #{address,jdbcType=VARCHAR},
      address_en = #{addressEn,jdbcType=VARCHAR},
      zip_code = #{zipCode,jdbcType=VARCHAR},
      tel = #{tel,jdbcType=VARCHAR},
      state = #{state,jdbcType=INTEGER},
      create_date = #{createDate,jdbcType=TIMESTAMP},
      update_date = #{updateDate,jdbcType=TIMESTAMP},
      province = #{province,jdbcType=VARCHAR},
      city = #{city,jdbcType=VARCHAR},
      address_detail = #{addressDetail,jdbcType=VARCHAR}
    where company_id = #{companyId,jdbcType=INTEGER}
  </update>
  <select id="getBigCustomerCompany" resultMap="BaseResultMap" >
    select distinct c.* from tb_user_company_relat ucr,tb_company c where ucr.company_id = c.company_id;
  </select>
  <select id="getCompanyNumOfMon" resultType="java.util.Map" >
    select count(DISTINCT u.company_id) companyNum,date_format(c.create_date,'%Y-%m') time
        from tb_user_company_relat ucr 
        LEFT JOIN tb_user u on u.user_id=ucr.user_id  
        LEFT JOIN tb_company c on u.company_id=c.company_id
        where u.state=#{state} and c.state=#{state}
         <if test="companyId != null">
        and ucr.company_id=#{companyId}
        </if>
        <if test="testAccountIds != null">
        and ucr.user_id not in(${testAccountIds})
        </if>
        GROUP BY time
        ORDER BY time ${order} 
   </select>
   <select id="getCompany" resultMap="BaseResultMap">
    select tc.*,c.company_name bigCustomerName,count(u.company_id) userNum  from tb_user_company_relat ucr 
	LEFT JOIN tb_company c on ucr.company_id=c.company_id 
	LEFT JOIN tb_user u on u.user_id=ucr.user_id 
	LEFT JOIN tb_company tc on tc.company_id=u.company_id
	where u.state=#{state } and tc.state=#{state }
	<if test="testAccountIds != null">
    and ucr.user_id not in(${testAccountIds})
    </if>
	<if test="companyId != null">
    and ucr.company_id=#{companyId}
    </if>
	GROUP BY u.company_id
   </select>
   
   <select id="getCompanyNumCount" resultType="java.util.Map" >
    select count(DISTINCT u.company_id) companyNum,cmp.company_id companyId,cmp.company_name companyName
    from tb_user_company_relat ucr
            LEFT JOIN tb_company cmp on ucr.company_id=cmp.company_id
    LEFT JOIN tb_user u on u.user_id=ucr.user_id  
    LEFT JOIN tb_company c on u.company_id=c.company_id
    where  u.state=#{state } and c.state=#{state }
    <if test="testAccountIds != null">
     and ucr.user_id not in(${testAccountIds})
     </if>
    GROUP BY companyId
    ORDER BY companyNum;
   </select>
   
   <select id="getComanyByPage" resultMap="BaseResultMap">
    select * from tb_company where state=#{state }
    <if test="keyword!=null and keyword!=''">
     and company_name like '%${keyword }%'
    </if>
    order by create_date
  </select>
  <select id="getComanyList" resultMap="BaseResultMap">
    select company_id,company_name from tb_company where state=#{state } order by company_id
  </select>
  <select id="getCompanyByIdAndState" resultMap="BaseResultMap">
    select * from tb_company where state=#{state } and company_id=#{companyId }
  </select>
  <select id="getAllToSelect" resultType="java.util.HashMap">
    select company_id as id, company_name as text from tb_company where state = 0;
  </select>
  <insert id="addCompany" parameterType="com.celloud.manager.model.Company" useGeneratedKeys="true" keyProperty="companyId" >
    insert into tb_company (company_name, english_name, 
      company_icon, address, address_en, 
      zip_code, tel, state, 
      create_date, province, 
      city, address_detail)
    values (#{companyName }, #{englishName }, 
      #{companyIcon }, #{address }, #{addressEn }, 
      #{zipCode }, #{tel }, #{state }, 
      now(), #{province }, 
      #{city }, #{addressDetail })
  </insert>
  <select id="findCompanyIdsByRoleId" resultType="java.lang.String">
    SELECT company_id
    FROM tb_user
    WHERE user_id
    IN(
        SELECT user_id
        FROM tb_sec_user_role_relat
        WHERE role_id = #{roleId}
    )
    AND role = 0
  </select>
</mapper>